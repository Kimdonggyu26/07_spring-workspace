<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	

	<appender class="ch.qos.logback.core.ConsoleAppender" name="consoleLog">
		<encoder>
			<pattern>%-5level: [%date{yyyy-MM-dd HH:mm:ss}] [%logger:%line] - %msg%n</pattern>
		</encoder>
	</appender>
	
	<appender class="ch.qos.logback.core.FileAppender" name="fileLog">
		<file>/logs/ajax.log</file>
		<append>true</append>
		<immediateFlush>true</immediateFlush>
		<encoder>
			<pattern>%-5level: [%date{yyyy-MM-dd HH:mm:ss}] [%logger:%line] - %msg%n</pattern>
		</encoder>
	</appender>
	
	<!-- 특정 조건을 넘어서면 새로운 파일로 로깅 -->
	<appender class="ch.qos.logback.core.rolling.RollingFileAppender" name="rollingFileLog">
		<!-- rollingPolicy : 어떤 조건으로 파일을 생성 또는 사라지게 할건지 보관정책 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy">
			<fileNamePattern>/logs/ajax-%d{yyyy-MM-dd}.%i.log</fileNamePattern>
			<maxFileSize>10MB</maxFileSize>
			<maxHistory>30</maxHistory>
			<totalSizeCap>10GB</totalSizeCap>
		</rollingPolicy>
		<encoder>
			<pattern>%-5level: [%date{yyyy-MM-dd HH:mm:ss}] [%logger:%line] - %msg%n</pattern>
		</encoder>
	</appender>
	
	
	<!-- 3) root logger와 logger 함께 사용하기 -->
	<logger name="org.springframework" level="INFO" />
	<logger name="com.br.file" level="DEBUG" />
	
	<logger name="jdbc.sqlonly" level="off" />					<!-- 쿼리문 -->
	<logger name="jdbc.sqltiming" level="INFO" /> 			<!-- 쿼리문 + 실행시간 -->
	<logger name="jdbc.audit" level="off" />						<!-- JDBC 호출 정보 -->	
	<logger name="jdbc.resultset" level="off" /> 				<!-- ResultSet 호출 정보 -->
	<logger name="jdbc.resultsettable" level="off" />		<!-- ResultSet 결과 (조회결과 테이블) -->
	<logger name="jdbc.connection" level="off" />				<!-- Connection 호출 정보 -->
	
	<root level="WARN"> <!-- 기본 로그 레벨은 WARN 설정 -->
		<appender-ref ref="consoleLog" />
	</root>
	
	
	
	
	
	
</configuration>